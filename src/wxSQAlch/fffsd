
Add: Add(self, ParserResults pr)
AnalyticsActivities: List[AnalyticsActivity]()\r
List[AnalyticsActivity](int capacity)\r
List[AnalyticsActivity](IEnumerable[AnalyticsActivity] collection)\r

AnalyticsEmails: Dictionary[str, List[AnalyticsActivityEmail]]()\r
Dictionary[str, List[AnalyticsActivityEmail]](int capacity)\r
Dictionary[str, List[AnalyticsActivityEmail]](IEqualityComparer[str] comparer)\r
Dictionary[str, List[AnalyticsActivityEmail]](int capacity, IEqualityComparer[str] comparer)\r
Dictionary[str, List[AnalyticsActivityEmail]](IDictionary[str, List[AnalyticsActivityEmail]] dictionary)\r
Dictionary[str, List[AnalyticsActivityEmail]](IDictionary[str, List[AnalyticsActivityEmail]] dictionary, IEqualityComparer[str] comparer)\r

AnalyticsOther: Dictionary[ActivityType, List[AnalyticsActivityOther]]()\r
Dictionary[ActivityType, List[AnalyticsActivityOther]](int capacity)\r
Dictionary[ActivityType, List[AnalyticsActivityOther]](IEqualityComparer[ActivityType] comparer)\r
Dictionary[ActivityType, List[AnalyticsActivityOther]](int capacity, IEqualityComparer[ActivityType] comparer)\r
Dictionary[ActivityType, List[AnalyticsActivityOther]](IDictionary[ActivityType, List[AnalyticsActivityOther]] dictionary)\r
Dictionary[ActivityType, List[AnalyticsActivityOther]](IDictionary[ActivityType, List[AnalyticsActivityOther]] dictionary, IEqualityComparer[ActivityType] comparer)\r

AnalyticsPhones: List[AnalyticsActivityPhone]()\r
List[AnalyticsActivityPhone](int capacity)\r
List[AnalyticsActivityPhone](IEnumerable[AnalyticsActivityPhone] collection)\r

ApplicationsManager: ApplicationsManager(ModelStore models)\r

CarvedFileSystems: 
ClearAnalytics: ClearAnalytics(self)
CloudDataSources: CloudData()\r

DataFiles: DataFilesCollection(Guid projectId)\r

DatabaseCellsData: ConcurrentDictionary[Stream, DatabaseCellsData]()\r
ConcurrentDictionary[Stream, DatabaseCellsData](int concurrencyLevel, int capacity)\r
ConcurrentDictionary[Stream, DatabaseCellsData](IEnumerable[KeyValuePair[Stream, DatabaseCellsData]] collection)\r
ConcurrentDictionary[Stream, DatabaseCellsData](IEqualityComparer[Stream] comparer)\r
ConcurrentDictionary[Stream, DatabaseCellsData](IEnumerable[KeyValuePair[Stream, DatabaseCellsData]] collection, IEqualityComparer[Stream] comparer)\r
ConcurrentDictionary[Stream, DatabaseCellsData](int concurrencyLevel, IEnumerable[KeyValuePair[Stream, DatabaseCellsData]] collection, IEqualityComparer[Stream] comparer)\r
ConcurrentDictionary[Stream, DatabaseCellsData](int concurrencyLevel, int capacity, IEqualityComparer[Stream] comparer)\r

DeviceInfo: DeviceInfo(Guid projectGuid, ExtractionInfo sourceExtraction)\r

Dispose: Dispose(self, bool disposing)\r
Dispose(self)
FileSystems: 
FinishedAnalytics: FinishedAnalytics(self)
FinishedComputingAnalytics: BoundEvent(event# reflectedEvent, object instance, type ownerType)\r

GetAllFileSystems: IEnumerable[FileSystem] GetAllFileSystems(self)
GetTableName: str GetTableName(self, Node node, MemoryRange memoryRange)
Images: 
InfectedFiles: SynchronizedObservableCollection[Node]()\r
SynchronizedObservableCollection[Node](IEnumerable[Node] collection)\r
SynchronizedObservableCollection[Node](List[Node] list)\r

ManualEvidence: ManualEvidanceCollection(Guid caseid, Guid projectId)\r

ManualEvidenceFileSystems: 
MemoryRanges: 
MergeTempModels: MergeTempModels(self)
Models: ModelStore(DataStore dataStore, bool isTemp)\r

ProjectGuid: Guid(Array[Byte] b)\r
Guid(UInt32 a, UInt16 b, UInt16 c, Byte d, Byte e, Byte f, Byte g, Byte h, Byte i, Byte j, Byte k)\r
Guid(int a, Int16 b, Int16 c, Array[Byte] d)\r
Guid(int a, Int16 b, Int16 c, Byte d, Byte e, Byte f, Byte g, Byte h, Byte i, Byte j, Byte k)\r
Guid(str g)\r

ProjectState: ProjectState(Guid guid, Guid caseId, str openAdvancedFilePath)\r

RestoreOriginalTimeZoneForTimeStamps: RestoreOriginalTimeZoneForTimeStamps(self)
ScannedFileSystems: HashSet[FileSystem]()\r
HashSet[FileSystem](int capacity)\r
HashSet[FileSystem](IEqualityComparer[FileSystem] comparer)\r
HashSet[FileSystem](IEnumerable[FileSystem] collection)\r
HashSet[FileSystem](IEnumerable[FileSystem] collection, IEqualityComparer[FileSystem] comparer)\r
HashSet[FileSystem](int capacity, IEqualityComparer[FileSystem] comparer)\r

ShiftAllTimeStampsToTimeZone: ShiftAllTimeStampsToTimeZone(self, IProjectSettingsTimeZone setting)
StartingComputingAnalytics: BoundEvent(event# reflectedEvent, object instance, type ownerType)\r

TempModels: ModelStore(DataStore dataStore, bool isTemp)\r

TimeZoneToInitializeAfterLoading: None
ToString: str ToString(self)
__add__: x.__add__(y) <==> x+y
__class__: DataStore(ProjectState project)\r

__delattr__: __delattr__(object self, str name)
__doc__: str(Char* value)\r
str(Char* value, int startIndex, int length)\r
str(SByte* value)\r
str(SByte* value, int startIndex, int length)\r
str(SByte* value, int startIndex, int length, Encoding enc)\r
str(Array[Char] value, int startIndex, int length)\r
str(Array[Char] value)\r
str(Char c, int count)\r

__enter__: object __enter__(IDisposable self)
__exit__: __exit__(IDisposable self, object exc_type, object exc_value, object exc_back)
__format__: str __format__(object self, str formatSpec)
__getattribute__: object __getattribute__(object self, str name)
__hash__: x.__hash__() <==> hash(x)
__init__: x.__init__(...) initializes x; see x.__class__.__doc__ for signature\r
x.__init__(...) initializes x; see x.__class__.__doc__ for signature\r
x.__init__(...) initializes x; see x.__class__.__doc__ for signature
__new__: __new__(cls, ProjectState project)\r

__reduce__: helper for pickle
__reduce_ex__: helper for pickle\r
helper for pickle
__repr__: str __repr__(self)
__setattr__: __setattr__(object self, str name, object value)
__sizeof__: int __sizeof__(object self)
__str__: x.__str__() <==> str(x)
__subclasshook__: NotImplementedType __subclasshook__(Array[object] args)